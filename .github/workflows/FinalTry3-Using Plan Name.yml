name: FinalTry3-SelectPlanName1

on: 
  workflow_dispatch:
    inputs:
      plan:
        type: choice
        description: Please select Test Plan For the execution
        options: 
        - Shop Floor
        - SOAPI
        - SYDATA-Sales_Order
        - System_Setup
        - Work Order
        - Temp
      
      TestEnv:
        type: choice
        description: Please select environment
        options: 
        - AutomationOrg 
  
jobs:
  build:
    runs-on: ubuntu-latest
    env: 
       PROVAR_HOME: ${{ github.workspace }}/ProvarHome
       
      
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d_%H_%M_%S')"

    - name: Set Plan Name
      id: PlanName
      run: |
        temp="${{github.event.inputs.plan}}"
        echo "::set-output name=PlanName::$(echo ${temp// /_})"    

    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 8

    - name: Execute Test Plan-${{github.event.inputs.plan}}
      run: |
        echo "Test Plan Name Env Var--:"${{ steps.PlanName.outputs.PlanName}}
        mkdir $GITHUB_WORKSPACE/ProvarHome
        curl -O https://download.provartesting.com/2.6.2/Provar_ANT_2.6.2.02.zip
        unzip -o Provar_ANT* -d ProvarHome
        rm Provar_ANT_*
        sudo apt-get update && sudo apt-get upgrade       
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -        
        sudo echo "deb [arch=amd64]  http://dl.google.com/linux/chrome/deb/ stable main" >>sudo tee -a /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get -y install google-chrome-stable
        echo $PROVAR_HOME
        cd $GITHUB_WORKSPACE/ANT
        echo "Selected Plan Name="${{ github.event.inputs.plan }}
        echo "Selected Environment is="${{ github.event.inputs.TestEnv }}
        xvfb-run ant -file build.xml "-DTestEnv=${{ github.event.inputs.TestEnv }}" "-DTestPlan=${{ github.event.inputs.plan }}" runtests
   
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      id: test-report1
      if: ${{ always() }}
      with:
         report_paths: '${{ github.workspace }}/ANT/Results/JUnit html/TEST*.xml'    # Path to test results 
         check_name: JUnit Report-${{matrix.Plan}}
         fail_on_failure: false
         require_tests: true
         include_passed: true
         check_retries: true
         job_summary: true
         detailed_summary: true
         annotate_notice: false       
         
    - name: Compressing Results folder(Create Zip File)
      if: ${{ always() }}
      run: |
        cd $GITHUB_WORKSPACE/ANT
        echo "compressing Results folder"
        zip -v -r Execution_Report_for_${{github.workflow}}_${{ steps.PlanName.outputs.PlanName}}-${{ steps.date.outputs.date }}_${{github.run_attempt}}-${{job.status}}.zip Results/*
        echo "-----List of file-----"
        ls -a
       

    - name: Attached Report Zip file to WorkFlow
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: Execution_Report_for_${{github.workflow}}_${{ steps.PlanName.outputs.PlanName}}-${{ steps.date.outputs.date }}_${{github.run_attempt}}-${{job.status}}
        path: ${{ github.workspace }}/ANT/Results/*

