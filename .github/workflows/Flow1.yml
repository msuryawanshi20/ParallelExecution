name: Flow1

on: 
  workflow_call:
    inputs:
      TestEnv:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
       PROVAR_HOME: ${{ github.workspace }}/ProvarHome
       
    strategy:
      fail-fast: false
      matrix:
        Plan: ["Test1",Test2]  	
    
    steps:
    - name: Execute Test Plan-${{matrix.Plan}}
      run: |
        echo "Test Environment"${{ github.event.inputs.TestEnv }}
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d_%H_%M_%S')"

    - name: Set Plan Name
      id: PlanName
      run: |
        temp="${{matrix.Plan}}"	
        echo "::set-output name=PlanName::$(echo ${temp// /_})"    

    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 8

    
    - name: Send Slack Message
      uses: archive/github-actions-slack@master
      id: send-message

      with:
        slack-function: send-message
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
        slack-channel: C03KF4U7TSP
        slack-text: Execution Started for Test Plan ${{ steps.PlanName.outputs.PlanName}} at ${{ steps.date.outputs.date }}

    - name: Send "Slack Message" Result
      run: echo "Data - ${{ steps.send-message.outputs.slack-result }}"

    - name: Execute Test Plan-${{matrix.Plan}}
      run: |
        echo "Test Plan Name Env Var--:"${{ steps.PlanName.outputs.PlanName}}
        mkdir $GITHUB_WORKSPACE/ProvarHome
        curl -O https://download.provartesting.com/2.6.0/Provar_ANT_2.6.0.04.zip
        unzip -o Provar_ANT* -d ProvarHome
        rm Provar_ANT_*
        sudo apt-get update && sudo apt-get upgrade       
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -        
        sudo echo "deb [arch=amd64]  http://dl.google.com/linux/chrome/deb/ stable main" >>sudo tee -a /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get -y install google-chrome-stable
        echo $PROVAR_HOME
        cd $GITHUB_WORKSPACE/ANT
        echo "Work SPace Path:::"${{ github.workspace }}
        echo "Selected Plan Name="${{matrix.Plan}}
        echo "Selected Environment is="${{ github.event.inputs.TestEnv }}
        xvfb-run ant -file build.xml "-DTestEnv=default" "-DTestPlan=Regression_API/${{matrix.Plan}}" runtests
   
    - name: Publish Test Report NEW TRY
      uses: mikepenz/action-junit-report@v3
      id: test-report1
      if: always() # always run even if the previous step fails
      with:
         report_paths: '${{ github.workspace }}/ANT/Results/JUnit html/TEST*.xml'    # Path to test results 
         check_name: New REPORT${{matrix.Plan}}
         fail_on_failure: false
         require_tests: false
         include_passed: true
         check_retries: false
         job_summary: true
         detailed_summary: true
         annotate_notice: false        
         
    - name: Surefire Report
      uses: ScaCap/action-surefire-report@v1.0.5
      with:
        report_paths: ${{ github.workspace }}/ANT/Results/JUnit html/TESTS-TestSuites.xml 
        check_name: SureFire Report${{matrix.Plan}}
        fail_on_test_failures: false
        fail_if_no_tests: true      
        
    - name: Send Thread Message
      uses: archive/github-actions-slack@master
      with:
        slack-function: send-message
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
        slack-channel: ${{ fromJson(steps.send-message.outputs.slack-result).response.channel }}
        slack-text: JUnit Report Link-${{ steps.test-report.outputs.runHtmlUrl }} -Build_Status-${{job.status}}
        slack-optional-thread_ts: ${{ fromJson(steps.send-message.outputs.slack-result).response.message.ts }}
        slack-optional-reply_broadcast: true # To broadcast thread reply in channel

    - name: Send "Send Thread Message" Result
      run: echo "Data - ${{ steps.send-message.outputs.slack-result }}"
     
    - name: Attached Report Zip file to WorkFlow
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: Execution_Report_for_${{github.workflow}}_${{matrix.Plan}}-${{ steps.date.outputs.date }}_${{github.run_attempt}}-${{job.status}}
        path: ${{ github.workspace }}/ANT/Results/*
